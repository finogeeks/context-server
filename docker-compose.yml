version: '3.8'

services:
  # ===========================================
  # context-server - 主服务
  # ===========================================
  context-server:
    image: finogeek/context-server:latest
    container_name: context-server
    ports:
      - "8123:8123"
    environment:
      - PORT=8123
      - NODE_ENV=production

      # LLM 配置
      - LLM_API_KEY=your_key
      - LLM_BASE_URL=https://api.openai.com/v1
      - LLM_MODEL=gpt-4o-mini

      # 轻量级 LLM 配置(例如 14B 32B 等模型), 用于一些内部轻量级场景
      - LIGHTWEIGHT_LLM_API_KEY=your_key
      - LIGHTWEIGHT_LLM_BASE_URL=https://api.openai.com/v1
      - LIGHTWEIGHT_LLM_MODEL=gpt-4o-mini

      # 持久化配置
      - PERSISTENCE_MODE=nats_timescale

      # NATS 配置
      - NATS_SERVERS=nats://nats:4222
      - NATS_MAX_RECONNECT=10
      - NATS_RECONNECT_WAIT=2000
      - NATS_TIMEOUT=5000

      # 持久化 TimescaleDB 配置
      - TIMESCALE_HOST=timescaledb
      - TIMESCALE_PORT=5432
      - TIMESCALE_DATABASE=agentic_db
      - TIMESCALE_USER=postgres
      - TIMESCALE_PASSWORD=postgres123
      - TIMESCALE_SSL=false
      - TIMESCALE_MAX_CONNECTIONS=20
      - TIMESCALE_IDLE_TIMEOUT=30000
      - TIMESCALE_CONNECTION_TIMEOUT=10000
    depends_on:
      - nats
      - timescaledb
    restart: unless-stopped

  nats:
    image: nats:latest
    container_name: nats-server
    ports:
      - "4222:4222"  # NATS 客户端连接端口
      - "8222:8222"  # NATS 监控端口
    restart: unless-stopped
    volumes:
      - ./nats.conf:/etc/nats/nats.conf  # 挂载配置文件
    command: --config /etc/nats/nats.conf  # 使用自定义配置文件

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: timescaledb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "agentic_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres123"
      POSTGRES_HOST_AUTH_METHOD: trust
      TIMESCALEDB_TELEMETRY: "off"
      TS_TUNE_MEMORY: "1GB"
      TS_TUNE_NUM_CPUS: 2
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    command: >
      postgres
      -c shared_preload_libraries=timescaledb
      -c max_connections=${POSTGRES_MAX_CONNECTIONS:-100}
      -c shared_buffers=${POSTGRES_SHARED_BUFFERS:-256MB}
      -c effective_cache_size=${POSTGRES_EFFECTIVE_CACHE_SIZE:-1GB}
      -c maintenance_work_mem=${POSTGRES_MAINTENANCE_WORK_MEM:-64MB}
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=${POSTGRES_WORK_MEM:-4MB}
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c log_statement=${POSTGRES_LOG_STATEMENT:-none}
      -c log_min_duration_statement=${POSTGRES_LOG_MIN_DURATION:-1000}

# ===========================================
# 数据卷配置
# ===========================================
volumes:
  # TimescaleDB 数据
  timescaledb_data:
    name: agentic_timescaledb_data
    driver: local
  
  # NATS JetStream 数据
  nats_jetstream_data:
    name: agentic_nats_jetstream_data
    driver: local